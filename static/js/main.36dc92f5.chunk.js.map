{"version":3,"sources":["plus.svg","components/ListItemComponent.js","components/AddTransactionComponent.js","components/BalanceComponent.js","components/IncomeExpenseComponent.js","App.js","index.js"],"names":["module","exports","ListIemComponent","props","className","transaction","amount","description","AddTransactionComponent","useState","updateDescription","updateAmount","Dialog","open","isDialogOpen","DialogTitle","style","cursor","id","DialogContent","htmlFor","type","placeholder","onChange","event","target","value","DialogActions","Button","color","onClick","toggleDialog","addTransaction","BalanceComponent","setDialogOpen","balance","src","addIcon","width","height","alt","IncomeExpenseComponent","income","expense","App","updateIncome","updateExpense","history","updateHistory","transactionObj","historyList","push","Number","length","map","historyObj","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36dc92f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plus.92f59c67.svg\";","import React from \"react\";\n\nexport const ListIemComponent = (props) => {\n    return (\n        <div className={'card-view list-item ' + (props.transaction.amount > 0 ? 'green-border' : 'red-border')}>\n            <span>{props.transaction?.description}</span>\n            <span>{props.transaction?.amount}</span>\n        </div>\n    )\n}\n","import React, { useState } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\n\nexport const AddTransactionComponent = (props) => {\n  const [description, updateDescription] = useState(\"\");\n  const [amount, updateAmount] = useState();\n\n  const addRecord = () => {\n    props.toggleDialog();\n    props.addTransaction({ description, amount });\n  };\n\n  return (\n    <Dialog open={props.isDialogOpen}>\n      <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\n        Add new transaction\n      </DialogTitle>\n      <DialogContent>\n        <form>\n          <div className=\"input-container\">\n            <label htmlFor=\"text\">Description</label>\n            <input\n              type=\"text\"\n              placeholder=\"Enter Description\"\n              onChange={(event) => updateDescription(event.target.value)}\n            />\n          </div>\n          <div className=\"input-container\">\n            <label htmlFor=\"amount\">\n              Amount <br />\n              (negative - expense, positive - income)\n            </label>\n            <input\n              type=\"number\"\n              placeholder=\"Enter Amount\"\n              onChange={(event) => updateAmount(event.target.value)}\n            />\n          </div>\n          <DialogActions>\n            <Button color=\"primary\" onClick={props.toggleDialog}>\n              {\" \"}\n              Cancel\n            </Button>\n            <Button color=\"primary\" onClick={addRecord}>\n              Add\n            </Button>\n          </DialogActions>{\" \"}\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import React, { useState } from \"react\";\nimport addIcon from \"../plus.svg\";\nimport { AddTransactionComponent } from \"./AddTransactionComponent\";\n\nexport const BalanceComponent = (props) => {\n  const [isDialogOpen, setDialogOpen] = useState(false);\n\n  const toggleDialog = () => {\n    setDialogOpen((isDialogOpen) => !isDialogOpen);\n  };\n\n  return (\n    <div className=\"row jc-space-between align-center\">\n      <AddTransactionComponent\n        isDialogOpen={isDialogOpen}\n        toggleDialog={toggleDialog}\n        addTransaction={props.addTransaction}\n      />\n      <div className=\"column\">\n        <h4>BALANCE</h4>\n        <h1 id=\"balance\">${props.balance}</h1>\n      </div>\n      <img\n        src={addIcon}\n        style={{ width: \"32px\", height: \"32px\", cursor: \"pointer\" }}\n        alt=\"add\"\n        onClick={toggleDialog}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\n\nexport const IncomeExpenseComponent =(props)=>{\n    return(\n        <div className=\"card-view row income-expense-view\">\n            <div>\n                <h4>Income</h4>\n                <p className=\"income-text-value fc-income\">+$ {props.income}</p>\n            </div>\n            <div>\n                <h4>Expense</h4>\n                <p id=\"money-plus\" className=\"income-text-value fc-expense\">\n                    +$ {props.expense}\n                </p>\n            </div>\n        </div>\n\n    )\n}\n","import React, { useState } from \"react\";\nimport { ListIemComponent } from \"./components/ListItemComponent\";\nimport { BalanceComponent } from \"./components/BalanceComponent\";\nimport { IncomeExpenseComponent } from \"./components/IncomeExpenseComponent\";\n\nfunction App() {\n  const [income, updateIncome] = useState(0.0);\n  const [expense, updateExpense] = useState(0.0);\n  const [history, updateHistory] = useState([]);\n\n  const addTransaction = (transactionObj) => {\n    let historyList = [...history];\n    historyList.push(transactionObj);\n    updateHistory(historyList);\n    if (transactionObj.amount > 0)\n      updateIncome((income) => income + Number(transactionObj.amount));\n    else updateExpense((expense) => expense + Number(transactionObj.amount));\n  };\n  return (\n    <>\n      <h2>Expense Tracker</h2>\n      <div className=\"container\">\n        <BalanceComponent\n          balance={income + expense}\n          addTransaction={addTransaction}\n        />\n        <IncomeExpenseComponent income={income} expense={expense} />\n        <h3>History</h3>\n        {history?.length\n          ? history.map((historyObj) => (\n              <ListIemComponent transaction={historyObj} />\n            ))\n          : null}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}